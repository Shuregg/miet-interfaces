`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 14.11.2023 21:28:33
// Design Name: 
// Module Name: SPI
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////

/*
1.	Построить структурную схему взаимодействия устройств со всеми используемыми сигналами.
2.	Реализовать интерфейс на языке Verilog, согласно варианту задания (I?C/SPI), без использования IP-core, сторонних библиотек и готовых решений.
3.	Выполнить задания, указанные в варианте, - написать test bench для построения временн?й диаграммы работы ведущего устройства и симуляции работы ведомых устройств.
 Информация, принимаемая с датчиков/flash, может быть произвольной, но должна соответствовать диапазону значений, указанному в технической документации.

Вариант № 2. SPI.
Используемые модули: Flash-память W25Q16, 7-сегментный ин-дикатор, сдвиговый регистр 74HC595, датчик MPU6000.
Задания для test bench:
1.	Считать 4 байта данных из Flash-памяти W25Q16.
2.	Вывести полученные данные на восемь 7-сегментных индика-торов, подключенных через сдвиговые регистры 74HC595.
3.	Записать данные в Flash-памяти W25Q16 по любому доступ-ному адресу.
4.	Считать данные из Flash-памяти W25Q16 по любому доступ-ному адресу, используя команду Fast Read.
5.	Вывести полученные данные на 7-сегментные индикаторы.
6.	Считать данные из MPU6000 по адресам 114-117.
7.	Вывести полученные данные на 7-сегментные индикаторы.
Подключить 7-сегментные индикаторы по последовательной схеме, остальные устройства - по параллельной схеме.
*/
module SPI(
    input   logic  SCLK_I,
    input   logic  MISO_I,
    
    output  logic  MOSI_O,
    output  logic  SS0_O, //Flash
    output  logic  SS1_O, //8-bit Shift register
    output  logic  SS2_O //sensor
    );
    
    
endmodule
